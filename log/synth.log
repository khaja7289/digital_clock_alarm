Qflow synthesis logfile created on Saturday 07 October 2023 04:19:28 PM IST
Running yosys for verilog parsing and synthesis
yosys  -s alarm_clock_top.ys

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Executing script file `alarm_clock_top.ys' --

1. Executing Liberty frontend.
Imported 32 cell types from liberty file.

2. Executing Verilog-2005 frontend: /home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v
Parsing Verilog input from `/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v' to AST representation.
Generating RTLIL representation for module `\alarm_clock_top'.
Generating RTLIL representation for module `\alarm_reg'.
Generating RTLIL representation for module `\counter'.
Generating RTLIL representation for module `\fsm'.
Generating RTLIL representation for module `\keyreg'.
Generating RTLIL representation for module `\lcd_driver'.
Generating RTLIL representation for module `\lcd_driver_4'.
Generating RTLIL representation for module `\timegen'.
Successfully finished Verilog frontend.

3. Executing SYNTH pass.

3.1. Executing HIERARCHY pass (managing design hierarchy).

3.1.1. Analyzing design hierarchy..
Top module:  \alarm_clock_top
Used module:     \timegen
Used module:     \lcd_driver_4
Used module:         \lcd_driver
Used module:     \keyreg
Used module:     \fsm
Used module:     \counter
Used module:     \alarm_reg

3.1.2. Analyzing design hierarchy..
Top module:  \alarm_clock_top
Used module:     \timegen
Used module:     \lcd_driver_4
Used module:         \lcd_driver
Used module:     \keyreg
Used module:     \fsm
Used module:     \counter
Used module:     \alarm_reg
Removed 0 unused modules.

3.2. Executing PROC pass (convert processes to netlists).

3.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 3 switch rules as full_case in process $proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:957$93 in module timegen.
Marked 3 switch rules as full_case in process $proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:917$90 in module timegen.
Marked 1 switch rules as full_case in process $proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:901$88 in module timegen.
Marked 1 switch rules as full_case in process $proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:756$80 in module lcd_driver.
Marked 3 switch rules as full_case in process $proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:718$78 in module lcd_driver.
Marked 2 switch rules as full_case in process $proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:657$74 in module keyreg.
Marked 4 switch rules as full_case in process $proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:599$70 in module fsm.
Marked 4 switch rules as full_case in process $proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:569$67 in module fsm.
Marked 10 switch rules as full_case in process $proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65 in module fsm.
Marked 1 switch rules as full_case in process $proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:424$62 in module fsm.
Marked 7 switch rules as full_case in process $proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:241$25 in module counter.
Marked 2 switch rules as full_case in process $proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:137$1 in module alarm_reg.
Removed a total of 0 dead cases.

3.2.3. Executing PROC_INIT pass (extract init attributes).

3.2.4. Executing PROC_ARST pass (detect async resets in processes).

3.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:979$95'.
     1/1: $1\one_second[0:0]
Creating decoders for process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:976$94'.
     1/1: $0\one_second[0:0]
Creating decoders for process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:957$93'.
     1/4: $3\_03_[0:0]
     2/4: $2\_03_[0:0]
     3/4: $1\_03_[0:0]
     4/4: $0\_03_[0:0]
Creating decoders for process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:953$92'.
     1/2: $1\one_minute_reg[0:0]
     2/2: $1\count[13:0]
Creating decoders for process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:949$91'.
     1/2: $0\one_minute_reg[0:0]
     2/2: $0\count[13:0]
Creating decoders for process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:917$90'.
     1/8: $3\_02_[0:0]
     2/8: $3\_00_[13:0]
     3/8: $2\_02_[0:0]
     4/8: $2\_00_[13:0]
     5/8: $1\_02_[0:0]
     6/8: $1\_00_[13:0]
     7/8: $0\_00_[13:0]
     8/8: $0\_02_[0:0]
Creating decoders for process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:914$89'.
     1/1: $0\one_minute[0:0]
Creating decoders for process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:901$88'.
     1/3: $1\_04_[0:0]
     2/3: $0\_04_[0:0]
     3/3: $0\_01_[0:0]
Creating decoders for process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:805$81'.
     1/1: $0\display_time[7:0]
Creating decoders for process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:756$80'.
     1/3: $1\_3_[7:0]
     2/3: $0\_3_[7:0]
     3/3: $0\_0_[7:0]
Creating decoders for process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:752$79'.
     1/2: $0\display_value[3:0]
     2/2: $0\sound_alarm[0:0]
Creating decoders for process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:718$78'.
     1/9: $1\_5_[0:0]
     2/9: $2\_6_[3:0]
     3/9: $1\_4_[3:0]
     4/9: $1\_6_[3:0]
     5/9: $0\_5_[0:0]
     6/9: $0\_4_[3:0]
     7/9: $0\_6_[3:0]
     8/9: $0\_2_[0:0]
     9/9: $0\_1_[3:0]
Creating decoders for process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:690$76'.
     1/4: $1\key_buffer_ms_hr[3:0]
     2/4: $1\key_buffer_ls_hr[3:0]
     3/4: $1\key_buffer_ms_min[3:0]
     4/4: $1\key_buffer_ls_min[3:0]
Creating decoders for process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:684$75'.
     1/4: $0\key_buffer_ms_hr[3:0]
     2/4: $0\key_buffer_ls_hr[3:0]
     3/4: $0\key_buffer_ms_min[3:0]
     4/4: $0\key_buffer_ls_min[3:0]
Creating decoders for process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:657$74'.
     1/12: $2\_1_[3:0]
     2/12: $2\_3_[3:0]
     3/12: $2\_0_[3:0]
     4/12: $2\_2_[3:0]
     5/12: $1\_2_[3:0]
     6/12: $1\_0_[3:0]
     7/12: $1\_3_[3:0]
     8/12: $1\_1_[3:0]
     9/12: $0\_3_[3:0]
    10/12: $0\_2_[3:0]
    11/12: $0\_1_[3:0]
    12/12: $0\_0_[3:0]
Creating decoders for process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:626$72'.
     1/1: $1\count2[3:0]
Creating decoders for process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:623$71'.
     1/1: $0\count2[3:0]
Creating decoders for process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:599$70'.
     1/5: $4\_01_[3:0]
     2/5: $3\_01_[3:0]
     3/5: $2\_01_[3:0]
     4/5: $1\_01_[3:0]
     5/5: $0\_01_[3:0]
Creating decoders for process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:596$69'.
     1/1: $1\count1[3:0]
Creating decoders for process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:593$68'.
     1/1: $0\count1[3:0]
Creating decoders for process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:569$67'.
     1/5: $4\_00_[3:0]
     2/5: $3\_00_[3:0]
     3/5: $2\_00_[3:0]
     4/5: $1\_00_[3:0]
     5/5: $0\_00_[3:0]
Creating decoders for process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:566$66'.
     1/1: $0\next_state[2:0]
Creating decoders for process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65'.
     1/38: $2\_04_[2:0]
     2/38: $5\_13_[2:0]
     3/38: $4\_12_[2:0]
     4/38: $4\_13_[2:0]
     5/38: $3\_11_[2:0]
     6/38: $3\_13_[2:0]
     7/38: $3\_12_[2:0]
     8/38: $2\_10_[2:0]
     9/38: $2\_13_[2:0]
    10/38: $2\_12_[2:0]
    11/38: $2\_11_[2:0]
    12/38: $3\_09_[2:0]
    13/38: $2\_08_[2:0]
    14/38: $2\_09_[2:0]
    15/38: $3\_07_[2:0]
    16/38: $2\_06_[2:0]
    17/38: $2\_07_[2:0]
    18/38: $1\_07_[2:0]
    19/38: $1\_06_[2:0]
    20/38: $1\_05_[2:0]
    21/38: $1\_13_[2:0]
    22/38: $1\_12_[2:0]
    23/38: $1\_11_[2:0]
    24/38: $1\_10_[2:0]
    25/38: $1\_09_[2:0]
    26/38: $1\_08_[2:0]
    27/38: $1\_04_[2:0]
    28/38: $0\_13_[2:0]
    29/38: $0\_12_[2:0]
    30/38: $0\_11_[2:0]
    31/38: $0\_10_[2:0]
    32/38: $0\_09_[2:0]
    33/38: $0\_08_[2:0]
    34/38: $0\_07_[2:0]
    35/38: $0\_06_[2:0]
    36/38: $0\_05_[2:0]
    37/38: $0\_04_[2:0]
    38/38: $0\_02_[2:0]
Creating decoders for process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:436$64'.
     1/1: $1\pre_state[2:0]
Creating decoders for process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:433$63'.
     1/1: $0\pre_state[2:0]
Creating decoders for process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:424$62'.
     1/2: $1\_03_[2:0]
     2/2: $0\_03_[2:0]
Creating decoders for process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:316$27'.
     1/4: $1\current_time_ls_min[3:0]
     2/4: $1\current_time_ls_hr[3:0]
     3/4: $1\current_time_ms_hr[3:0]
     4/4: $1\current_time_ms_min[3:0]
Creating decoders for process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:310$26'.
     1/4: $0\current_time_ls_min[3:0]
     2/4: $0\current_time_ls_hr[3:0]
     3/4: $0\current_time_ms_hr[3:0]
     4/4: $0\current_time_ms_min[3:0]
Creating decoders for process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:241$25'.
     1/29: $7\_01_[3:0]
     2/29: $7\_03_[3:0]
     3/29: $6\_01_[3:0]
     4/29: $6\_03_[3:0]
     5/29: $6\_00_[3:0]
     6/29: $5\_01_[3:0]
     7/29: $5\_03_[3:0]
     8/29: $5\_00_[3:0]
     9/29: $5\_02_[3:0]
    10/29: $4\_01_[3:0]
    11/29: $4\_00_[3:0]
    12/29: $4\_03_[3:0]
    13/29: $4\_02_[3:0]
    14/29: $3\_00_[3:0]
    15/29: $3\_03_[3:0]
    16/29: $3\_02_[3:0]
    17/29: $3\_01_[3:0]
    18/29: $2\_01_[3:0]
    19/29: $2\_00_[3:0]
    20/29: $2\_03_[3:0]
    21/29: $2\_02_[3:0]
    22/29: $1\_01_[3:0]
    23/29: $1\_00_[3:0]
    24/29: $1\_03_[3:0]
    25/29: $1\_02_[3:0]
    26/29: $0\_00_[3:0]
    27/29: $0\_03_[3:0]
    28/29: $0\_02_[3:0]
    29/29: $0\_01_[3:0]
Creating decoders for process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:170$3'.
     1/4: $1\alarm_time_ls_min[3:0]
     2/4: $1\alarm_time_ms_min[3:0]
     3/4: $1\alarm_time_ls_hr[3:0]
     4/4: $1\alarm_time_ms_hr[3:0]
Creating decoders for process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:164$2'.
     1/4: $0\alarm_time_ls_min[3:0]
     2/4: $0\alarm_time_ms_min[3:0]
     3/4: $0\alarm_time_ls_hr[3:0]
     4/4: $0\alarm_time_ms_hr[3:0]
Creating decoders for process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:137$1'.
     1/12: $2\_1_[3:0]
     2/12: $2\_3_[3:0]
     3/12: $2\_0_[3:0]
     4/12: $2\_2_[3:0]
     5/12: $1\_1_[3:0]
     6/12: $1\_3_[3:0]
     7/12: $1\_0_[3:0]
     8/12: $1\_2_[3:0]
     9/12: $0\_3_[3:0]
    10/12: $0\_2_[3:0]
    11/12: $0\_1_[3:0]
    12/12: $0\_0_[3:0]

3.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\timegen.\_03_' from process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:957$93'.
No latch inferred for signal `\timegen.\_02_' from process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:917$90'.
No latch inferred for signal `\timegen.\_00_' from process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:917$90'.
No latch inferred for signal `\timegen.\one_minute' from process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:914$89'.
No latch inferred for signal `\timegen.\_04_' from process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:901$88'.
No latch inferred for signal `\timegen.\_01_' from process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:901$88'.
No latch inferred for signal `\lcd_driver.\display_time' from process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:805$81'.
No latch inferred for signal `\lcd_driver.\_0_' from process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:756$80'.
No latch inferred for signal `\lcd_driver.\_3_' from process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:756$80'.
No latch inferred for signal `\lcd_driver.\display_value' from process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:752$79'.
No latch inferred for signal `\lcd_driver.\sound_alarm' from process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:752$79'.
No latch inferred for signal `\lcd_driver.\_1_' from process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:718$78'.
No latch inferred for signal `\lcd_driver.\_2_' from process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:718$78'.
No latch inferred for signal `\lcd_driver.\_4_' from process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:718$78'.
No latch inferred for signal `\lcd_driver.\_5_' from process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:718$78'.
Latch inferred for signal `\lcd_driver.\_6_' from process `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:718$78': $auto$proc_dlatch.cc:409:proc_dlatch$869
No latch inferred for signal `\keyreg.\_0_' from process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:657$74'.
No latch inferred for signal `\keyreg.\_1_' from process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:657$74'.
No latch inferred for signal `\keyreg.\_2_' from process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:657$74'.
No latch inferred for signal `\keyreg.\_3_' from process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:657$74'.
No latch inferred for signal `\fsm.\_01_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:599$70'.
No latch inferred for signal `\fsm.\_00_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:569$67'.
No latch inferred for signal `\fsm.\next_state' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:566$66'.
No latch inferred for signal `\fsm.\_02_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65'.
No latch inferred for signal `\fsm.\_05_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65'.
Latch inferred for signal `\fsm.\_04_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65': $auto$proc_dlatch.cc:409:proc_dlatch$880
Latch inferred for signal `\fsm.\_06_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65': $auto$proc_dlatch.cc:409:proc_dlatch$891
Latch inferred for signal `\fsm.\_07_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65': $auto$proc_dlatch.cc:409:proc_dlatch$918
Latch inferred for signal `\fsm.\_08_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65': $auto$proc_dlatch.cc:409:proc_dlatch$929
Latch inferred for signal `\fsm.\_09_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65': $auto$proc_dlatch.cc:409:proc_dlatch$956
Latch inferred for signal `\fsm.\_10_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65': $auto$proc_dlatch.cc:409:proc_dlatch$967
Latch inferred for signal `\fsm.\_11_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65': $auto$proc_dlatch.cc:409:proc_dlatch$988
Latch inferred for signal `\fsm.\_12_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65': $auto$proc_dlatch.cc:409:proc_dlatch$1037
Latch inferred for signal `\fsm.\_13_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65': $auto$proc_dlatch.cc:409:proc_dlatch$1116
No latch inferred for signal `\fsm.\_03_' from process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:424$62'.
No latch inferred for signal `\counter.\_01_' from process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:241$25'.
No latch inferred for signal `\counter.\_02_' from process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:241$25'.
No latch inferred for signal `\counter.\_03_' from process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:241$25'.
No latch inferred for signal `\counter.\_00_' from process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:241$25'.
No latch inferred for signal `\alarm_reg.\_0_' from process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:137$1'.
No latch inferred for signal `\alarm_reg.\_1_' from process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:137$1'.
No latch inferred for signal `\alarm_reg.\_2_' from process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:137$1'.
No latch inferred for signal `\alarm_reg.\_3_' from process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:137$1'.

3.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\timegen.\one_second' using process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:979$95'.
  created $dff cell `$procdff$1117' with positive edge clock.
Creating register for signal `\timegen.\one_second' using process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:976$94'.
  created $dff cell `$procdff$1118' with positive edge clock.
Creating register for signal `\timegen.\count' using process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:953$92'.
  created $dff cell `$procdff$1119' with positive edge clock.
Creating register for signal `\timegen.\one_minute_reg' using process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:953$92'.
  created $dff cell `$procdff$1120' with positive edge clock.
Creating register for signal `\timegen.\count' using process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:949$91'.
  created $dff cell `$procdff$1121' with positive edge clock.
Creating register for signal `\timegen.\one_minute_reg' using process `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:949$91'.
  created $dff cell `$procdff$1122' with positive edge clock.
Creating register for signal `\keyreg.\key_buffer_ls_hr' using process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:690$76'.
  created $dff cell `$procdff$1123' with positive edge clock.
Creating register for signal `\keyreg.\key_buffer_ls_min' using process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:690$76'.
  created $dff cell `$procdff$1124' with positive edge clock.
Creating register for signal `\keyreg.\key_buffer_ms_hr' using process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:690$76'.
  created $dff cell `$procdff$1125' with positive edge clock.
Creating register for signal `\keyreg.\key_buffer_ms_min' using process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:690$76'.
  created $dff cell `$procdff$1126' with positive edge clock.
Creating register for signal `\keyreg.\key_buffer_ls_hr' using process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:684$75'.
  created $dff cell `$procdff$1127' with positive edge clock.
Creating register for signal `\keyreg.\key_buffer_ls_min' using process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:684$75'.
  created $dff cell `$procdff$1128' with positive edge clock.
Creating register for signal `\keyreg.\key_buffer_ms_hr' using process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:684$75'.
  created $dff cell `$procdff$1129' with positive edge clock.
Creating register for signal `\keyreg.\key_buffer_ms_min' using process `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:684$75'.
  created $dff cell `$procdff$1130' with positive edge clock.
Creating register for signal `\fsm.\count2' using process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:626$72'.
  created $dff cell `$procdff$1131' with positive edge clock.
Creating register for signal `\fsm.\count2' using process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:623$71'.
  created $dff cell `$procdff$1132' with positive edge clock.
Creating register for signal `\fsm.\count1' using process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:596$69'.
  created $dff cell `$procdff$1133' with positive edge clock.
Creating register for signal `\fsm.\count1' using process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:593$68'.
  created $dff cell `$procdff$1134' with positive edge clock.
Creating register for signal `\fsm.\pre_state' using process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:436$64'.
  created $dff cell `$procdff$1135' with positive edge clock.
Creating register for signal `\fsm.\pre_state' using process `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:433$63'.
  created $dff cell `$procdff$1136' with positive edge clock.
Creating register for signal `\counter.\current_time_ls_hr' using process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:316$27'.
  created $dff cell `$procdff$1137' with positive edge clock.
Creating register for signal `\counter.\current_time_ls_min' using process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:316$27'.
  created $dff cell `$procdff$1138' with positive edge clock.
Creating register for signal `\counter.\current_time_ms_hr' using process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:316$27'.
  created $dff cell `$procdff$1139' with positive edge clock.
Creating register for signal `\counter.\current_time_ms_min' using process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:316$27'.
  created $dff cell `$procdff$1140' with positive edge clock.
Creating register for signal `\counter.\current_time_ls_hr' using process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:310$26'.
  created $dff cell `$procdff$1141' with positive edge clock.
Creating register for signal `\counter.\current_time_ls_min' using process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:310$26'.
  created $dff cell `$procdff$1142' with positive edge clock.
Creating register for signal `\counter.\current_time_ms_hr' using process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:310$26'.
  created $dff cell `$procdff$1143' with positive edge clock.
Creating register for signal `\counter.\current_time_ms_min' using process `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:310$26'.
  created $dff cell `$procdff$1144' with positive edge clock.
Creating register for signal `\alarm_reg.\alarm_time_ms_min' using process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:170$3'.
  created $dff cell `$procdff$1145' with positive edge clock.
Creating register for signal `\alarm_reg.\alarm_time_ls_hr' using process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:170$3'.
  created $dff cell `$procdff$1146' with positive edge clock.
Creating register for signal `\alarm_reg.\alarm_time_ls_min' using process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:170$3'.
  created $dff cell `$procdff$1147' with positive edge clock.
Creating register for signal `\alarm_reg.\alarm_time_ms_hr' using process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:170$3'.
  created $dff cell `$procdff$1148' with positive edge clock.
Creating register for signal `\alarm_reg.\alarm_time_ms_min' using process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:164$2'.
  created $dff cell `$procdff$1149' with positive edge clock.
Creating register for signal `\alarm_reg.\alarm_time_ls_hr' using process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:164$2'.
  created $dff cell `$procdff$1150' with positive edge clock.
Creating register for signal `\alarm_reg.\alarm_time_ls_min' using process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:164$2'.
  created $dff cell `$procdff$1151' with positive edge clock.
Creating register for signal `\alarm_reg.\alarm_time_ms_hr' using process `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:164$2'.
  created $dff cell `$procdff$1152' with positive edge clock.

3.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:979$95'.
Removing empty process `timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:976$94'.
Found and cleaned up 3 empty switches in `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:957$93'.
Removing empty process `timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:957$93'.
Removing empty process `timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:953$92'.
Removing empty process `timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:949$91'.
Found and cleaned up 3 empty switches in `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:917$90'.
Removing empty process `timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:917$90'.
Removing empty process `timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:914$89'.
Found and cleaned up 1 empty switch in `\timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:901$88'.
Removing empty process `timegen.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:901$88'.
Removing empty process `lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:805$81'.
Found and cleaned up 1 empty switch in `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:756$80'.
Removing empty process `lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:756$80'.
Removing empty process `lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:752$79'.
Found and cleaned up 3 empty switches in `\lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:718$78'.
Removing empty process `lcd_driver.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:718$78'.
Removing empty process `keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:690$76'.
Removing empty process `keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:684$75'.
Found and cleaned up 2 empty switches in `\keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:657$74'.
Removing empty process `keyreg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:657$74'.
Removing empty process `fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:626$72'.
Removing empty process `fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:623$71'.
Found and cleaned up 4 empty switches in `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:599$70'.
Removing empty process `fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:599$70'.
Removing empty process `fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:596$69'.
Removing empty process `fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:593$68'.
Found and cleaned up 4 empty switches in `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:569$67'.
Removing empty process `fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:569$67'.
Removing empty process `fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:566$66'.
Found and cleaned up 10 empty switches in `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65'.
Removing empty process `fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:439$65'.
Removing empty process `fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:436$64'.
Removing empty process `fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:433$63'.
Found and cleaned up 1 empty switch in `\fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:424$62'.
Removing empty process `fsm.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:424$62'.
Removing empty process `counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:316$27'.
Removing empty process `counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:310$26'.
Found and cleaned up 7 empty switches in `\counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:241$25'.
Removing empty process `counter.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:241$25'.
Removing empty process `alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:170$3'.
Removing empty process `alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:164$2'.
Found and cleaned up 2 empty switches in `\alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:137$1'.
Removing empty process `alarm_reg.$proc$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:137$1'.
Cleaned up 41 empty switches.

3.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module timegen.
Optimizing module lcd_driver_4.
Optimizing module lcd_driver.
<suppressed ~6 debug messages>
Optimizing module keyreg.
<suppressed ~1 debug messages>
Optimizing module fsm.
<suppressed ~133 debug messages>
Optimizing module counter.
<suppressed ~1 debug messages>
Optimizing module alarm_reg.
Optimizing module alarm_clock_top.

3.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \timegen..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \alarm_clock_top..
Removed 17 unused cells and 598 unused wires.
<suppressed ~24 debug messages>

3.5. Executing CHECK pass (checking for obvious problems).
checking module alarm_clock_top..
checking module alarm_reg..
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_hr [3]:
    port Q[3] of cell $procdff$1148 ($dff)
    port Q[3] of cell $procdff$1152 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_hr [2]:
    port Q[2] of cell $procdff$1148 ($dff)
    port Q[2] of cell $procdff$1152 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_hr [1]:
    port Q[1] of cell $procdff$1148 ($dff)
    port Q[1] of cell $procdff$1152 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_hr [0]:
    port Q[0] of cell $procdff$1148 ($dff)
    port Q[0] of cell $procdff$1152 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_min [3]:
    port Q[3] of cell $procdff$1147 ($dff)
    port Q[3] of cell $procdff$1151 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_min [2]:
    port Q[2] of cell $procdff$1147 ($dff)
    port Q[2] of cell $procdff$1151 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_min [1]:
    port Q[1] of cell $procdff$1147 ($dff)
    port Q[1] of cell $procdff$1151 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_min [0]:
    port Q[0] of cell $procdff$1147 ($dff)
    port Q[0] of cell $procdff$1151 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_hr [3]:
    port Q[3] of cell $procdff$1146 ($dff)
    port Q[3] of cell $procdff$1150 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_hr [2]:
    port Q[2] of cell $procdff$1146 ($dff)
    port Q[2] of cell $procdff$1150 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_hr [1]:
    port Q[1] of cell $procdff$1146 ($dff)
    port Q[1] of cell $procdff$1150 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_hr [0]:
    port Q[0] of cell $procdff$1146 ($dff)
    port Q[0] of cell $procdff$1150 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_min [3]:
    port Q[3] of cell $procdff$1145 ($dff)
    port Q[3] of cell $procdff$1149 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_min [2]:
    port Q[2] of cell $procdff$1145 ($dff)
    port Q[2] of cell $procdff$1149 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_min [1]:
    port Q[1] of cell $procdff$1145 ($dff)
    port Q[1] of cell $procdff$1149 ($dff)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_min [0]:
    port Q[0] of cell $procdff$1145 ($dff)
    port Q[0] of cell $procdff$1149 ($dff)
checking module counter..
Warning: multiple conflicting drivers for counter.\current_time_ms_min [3]:
    port Q[3] of cell $procdff$1140 ($dff)
    port Q[3] of cell $procdff$1144 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ms_min [2]:
    port Q[2] of cell $procdff$1140 ($dff)
    port Q[2] of cell $procdff$1144 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ms_min [1]:
    port Q[1] of cell $procdff$1140 ($dff)
    port Q[1] of cell $procdff$1144 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ms_min [0]:
    port Q[0] of cell $procdff$1140 ($dff)
    port Q[0] of cell $procdff$1144 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ms_hr [3]:
    port Q[3] of cell $procdff$1139 ($dff)
    port Q[3] of cell $procdff$1143 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ms_hr [2]:
    port Q[2] of cell $procdff$1139 ($dff)
    port Q[2] of cell $procdff$1143 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ms_hr [1]:
    port Q[1] of cell $procdff$1139 ($dff)
    port Q[1] of cell $procdff$1143 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ms_hr [0]:
    port Q[0] of cell $procdff$1139 ($dff)
    port Q[0] of cell $procdff$1143 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ls_min [3]:
    port Q[3] of cell $procdff$1138 ($dff)
    port Q[3] of cell $procdff$1142 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ls_min [2]:
    port Q[2] of cell $procdff$1138 ($dff)
    port Q[2] of cell $procdff$1142 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ls_min [1]:
    port Q[1] of cell $procdff$1138 ($dff)
    port Q[1] of cell $procdff$1142 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ls_min [0]:
    port Q[0] of cell $procdff$1138 ($dff)
    port Q[0] of cell $procdff$1142 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ls_hr [3]:
    port Q[3] of cell $procdff$1137 ($dff)
    port Q[3] of cell $procdff$1141 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ls_hr [2]:
    port Q[2] of cell $procdff$1137 ($dff)
    port Q[2] of cell $procdff$1141 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ls_hr [1]:
    port Q[1] of cell $procdff$1137 ($dff)
    port Q[1] of cell $procdff$1141 ($dff)
Warning: multiple conflicting drivers for counter.\current_time_ls_hr [0]:
    port Q[0] of cell $procdff$1137 ($dff)
    port Q[0] of cell $procdff$1141 ($dff)
checking module fsm..
Warning: multiple conflicting drivers for fsm.\pre_state [2]:
    port Q[2] of cell $procdff$1135 ($dff)
    port Q[2] of cell $procdff$1136 ($dff)
Warning: multiple conflicting drivers for fsm.\pre_state [1]:
    port Q[1] of cell $procdff$1135 ($dff)
    port Q[1] of cell $procdff$1136 ($dff)
Warning: multiple conflicting drivers for fsm.\pre_state [0]:
    port Q[0] of cell $procdff$1135 ($dff)
    port Q[0] of cell $procdff$1136 ($dff)
Warning: multiple conflicting drivers for fsm.\count1 [3]:
    port Q[3] of cell $procdff$1133 ($dff)
    port Q[3] of cell $procdff$1134 ($dff)
Warning: multiple conflicting drivers for fsm.\count1 [2]:
    port Q[2] of cell $procdff$1133 ($dff)
    port Q[2] of cell $procdff$1134 ($dff)
Warning: multiple conflicting drivers for fsm.\count1 [1]:
    port Q[1] of cell $procdff$1133 ($dff)
    port Q[1] of cell $procdff$1134 ($dff)
Warning: multiple conflicting drivers for fsm.\count1 [0]:
    port Q[0] of cell $procdff$1133 ($dff)
    port Q[0] of cell $procdff$1134 ($dff)
Warning: multiple conflicting drivers for fsm.\count2 [3]:
    port Q[3] of cell $procdff$1131 ($dff)
    port Q[3] of cell $procdff$1132 ($dff)
Warning: multiple conflicting drivers for fsm.\count2 [2]:
    port Q[2] of cell $procdff$1131 ($dff)
    port Q[2] of cell $procdff$1132 ($dff)
Warning: multiple conflicting drivers for fsm.\count2 [1]:
    port Q[1] of cell $procdff$1131 ($dff)
    port Q[1] of cell $procdff$1132 ($dff)
Warning: multiple conflicting drivers for fsm.\count2 [0]:
    port Q[0] of cell $procdff$1131 ($dff)
    port Q[0] of cell $procdff$1132 ($dff)
checking module keyreg..
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_min [3]:
    port Q[3] of cell $procdff$1126 ($dff)
    port Q[3] of cell $procdff$1130 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_min [2]:
    port Q[2] of cell $procdff$1126 ($dff)
    port Q[2] of cell $procdff$1130 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_min [1]:
    port Q[1] of cell $procdff$1126 ($dff)
    port Q[1] of cell $procdff$1130 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_min [0]:
    port Q[0] of cell $procdff$1126 ($dff)
    port Q[0] of cell $procdff$1130 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_hr [3]:
    port Q[3] of cell $procdff$1125 ($dff)
    port Q[3] of cell $procdff$1129 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_hr [2]:
    port Q[2] of cell $procdff$1125 ($dff)
    port Q[2] of cell $procdff$1129 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_hr [1]:
    port Q[1] of cell $procdff$1125 ($dff)
    port Q[1] of cell $procdff$1129 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_hr [0]:
    port Q[0] of cell $procdff$1125 ($dff)
    port Q[0] of cell $procdff$1129 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_min [3]:
    port Q[3] of cell $procdff$1124 ($dff)
    port Q[3] of cell $procdff$1128 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_min [2]:
    port Q[2] of cell $procdff$1124 ($dff)
    port Q[2] of cell $procdff$1128 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_min [1]:
    port Q[1] of cell $procdff$1124 ($dff)
    port Q[1] of cell $procdff$1128 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_min [0]:
    port Q[0] of cell $procdff$1124 ($dff)
    port Q[0] of cell $procdff$1128 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_hr [3]:
    port Q[3] of cell $procdff$1123 ($dff)
    port Q[3] of cell $procdff$1127 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_hr [2]:
    port Q[2] of cell $procdff$1123 ($dff)
    port Q[2] of cell $procdff$1127 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_hr [1]:
    port Q[1] of cell $procdff$1123 ($dff)
    port Q[1] of cell $procdff$1127 ($dff)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_hr [0]:
    port Q[0] of cell $procdff$1123 ($dff)
    port Q[0] of cell $procdff$1127 ($dff)
checking module lcd_driver..
checking module lcd_driver_4..
checking module timegen..
Warning: multiple conflicting drivers for timegen.\one_minute_reg:
    port Q[0] of cell $procdff$1120 ($dff)
    port Q[0] of cell $procdff$1122 ($dff)
Warning: multiple conflicting drivers for timegen.\count [13]:
    port Q[13] of cell $procdff$1119 ($dff)
    port Q[13] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\count [12]:
    port Q[12] of cell $procdff$1119 ($dff)
    port Q[12] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\count [11]:
    port Q[11] of cell $procdff$1119 ($dff)
    port Q[11] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\count [10]:
    port Q[10] of cell $procdff$1119 ($dff)
    port Q[10] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\count [9]:
    port Q[9] of cell $procdff$1119 ($dff)
    port Q[9] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\count [8]:
    port Q[8] of cell $procdff$1119 ($dff)
    port Q[8] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\count [7]:
    port Q[7] of cell $procdff$1119 ($dff)
    port Q[7] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\count [6]:
    port Q[6] of cell $procdff$1119 ($dff)
    port Q[6] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\count [5]:
    port Q[5] of cell $procdff$1119 ($dff)
    port Q[5] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\count [4]:
    port Q[4] of cell $procdff$1119 ($dff)
    port Q[4] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\count [3]:
    port Q[3] of cell $procdff$1119 ($dff)
    port Q[3] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\count [2]:
    port Q[2] of cell $procdff$1119 ($dff)
    port Q[2] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\count [1]:
    port Q[1] of cell $procdff$1119 ($dff)
    port Q[1] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\count [0]:
    port Q[0] of cell $procdff$1119 ($dff)
    port Q[0] of cell $procdff$1121 ($dff)
Warning: multiple conflicting drivers for timegen.\one_second:
    port Q[0] of cell $procdff$1117 ($dff)
    port Q[0] of cell $procdff$1118 ($dff)
found and reported 75 problems.

3.6. Executing OPT pass (performing simple optimizations).

3.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
Optimizing module fsm.
Optimizing module keyreg.
Optimizing module lcd_driver.
Optimizing module lcd_driver_4.
Optimizing module timegen.

3.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
<suppressed ~15 debug messages>
Finding identical cells in module `\fsm'.
<suppressed ~105 debug messages>
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 40 cells.

3.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alarm_clock_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alarm_reg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$829.
    dead port 1/2 on $mux $procmux$835.
    dead port 1/2 on $mux $procmux$841.
    dead port 1/2 on $mux $procmux$847.
Running muxtree optimizer on module \counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$554.
    dead port 1/2 on $mux $procmux$557.
    dead port 1/2 on $mux $procmux$560.
    dead port 2/2 on $mux $procmux$562.
    dead port 1/2 on $mux $procmux$565.
    dead port 1/2 on $mux $procmux$568.
    dead port 1/2 on $mux $procmux$575.
    dead port 1/2 on $mux $procmux$578.
    dead port 1/2 on $mux $procmux$581.
    dead port 2/2 on $mux $procmux$583.
    dead port 1/2 on $mux $procmux$586.
    dead port 1/2 on $mux $procmux$589.
    dead port 1/2 on $mux $procmux$596.
    dead port 1/2 on $mux $procmux$599.
    dead port 2/2 on $mux $procmux$601.
    dead port 1/2 on $mux $procmux$604.
    dead port 1/2 on $mux $procmux$607.
    dead port 1/2 on $mux $procmux$614.
    dead port 1/2 on $mux $procmux$617.
    dead port 2/2 on $mux $procmux$619.
    dead port 1/2 on $mux $procmux$622.
    dead port 1/2 on $mux $procmux$625.
    dead port 1/2 on $mux $procmux$632.
    dead port 1/2 on $mux $procmux$635.
    dead port 2/2 on $mux $procmux$637.
    dead port 1/2 on $mux $procmux$640.
    dead port 1/2 on $mux $procmux$643.
    dead port 1/2 on $mux $procmux$650.
    dead port 2/2 on $mux $procmux$652.
    dead port 1/2 on $mux $procmux$655.
    dead port 1/2 on $mux $procmux$658.
    dead port 1/2 on $mux $procmux$665.
    dead port 2/2 on $mux $procmux$667.
    dead port 1/2 on $mux $procmux$670.
    dead port 1/2 on $mux $procmux$673.
    dead port 1/2 on $mux $procmux$680.
    dead port 2/2 on $mux $procmux$682.
    dead port 1/2 on $mux $procmux$685.
    dead port 1/2 on $mux $procmux$688.
    dead port 1/2 on $mux $procmux$695.
    dead port 2/2 on $mux $procmux$697.
    dead port 1/2 on $mux $procmux$700.
    dead port 1/2 on $mux $procmux$703.
    dead port 2/2 on $mux $procmux$709.
    dead port 1/2 on $mux $procmux$712.
    dead port 1/2 on $mux $procmux$715.
    dead port 2/2 on $mux $procmux$721.
    dead port 1/2 on $mux $procmux$724.
    dead port 1/2 on $mux $procmux$727.
    dead port 2/2 on $mux $procmux$733.
    dead port 1/2 on $mux $procmux$736.
    dead port 1/2 on $mux $procmux$739.
    dead port 2/2 on $mux $procmux$745.
    dead port 1/2 on $mux $procmux$748.
    dead port 1/2 on $mux $procmux$751.
    dead port 1/2 on $mux $procmux$757.
    dead port 1/2 on $mux $procmux$760.
    dead port 1/2 on $mux $procmux$766.
    dead port 1/2 on $mux $procmux$769.
    dead port 1/2 on $mux $procmux$775.
    dead port 1/2 on $mux $procmux$778.
    dead port 1/2 on $mux $procmux$784.
    dead port 1/2 on $mux $procmux$787.
    dead port 1/2 on $mux $procmux$793.
    dead port 1/2 on $mux $procmux$799.
    dead port 1/2 on $mux $procmux$805.
    dead port 1/2 on $mux $procmux$811.
Running muxtree optimizer on module \fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$220.
    dead port 2/2 on $mux $procmux$223.
    dead port 1/2 on $mux $procmux$226.
    dead port 2/2 on $mux $procmux$232.
    dead port 1/2 on $mux $procmux$235.
    dead port 1/2 on $mux $procmux$241.
    dead port 1/2 on $mux $procmux$250.
    dead port 2/2 on $mux $procmux$253.
    dead port 1/2 on $mux $procmux$256.
    dead port 2/2 on $mux $procmux$262.
    dead port 1/2 on $mux $procmux$265.
    dead port 1/2 on $mux $procmux$271.
Running muxtree optimizer on module \keyreg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$184.
    dead port 1/2 on $mux $procmux$190.
    dead port 1/2 on $mux $procmux$196.
    dead port 1/2 on $mux $procmux$202.
Running muxtree optimizer on module \lcd_driver..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lcd_driver_4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \timegen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$100.
    dead port 1/2 on $mux $procmux$103.
    dead port 1/2 on $mux $procmux$109.
    dead port 1/2 on $mux $procmux$118.
    dead port 1/2 on $mux $procmux$121.
    dead port 1/2 on $mux $procmux$127.
    dead port 1/2 on $mux $procmux$130.
    dead port 1/2 on $mux $procmux$136.
    dead port 1/2 on $mux $procmux$142.
Removed 96 multiplexer ports.
<suppressed ~39 debug messages>

3.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alarm_clock_top.
  Optimizing cells in module \alarm_reg.
  Optimizing cells in module \counter.
  Optimizing cells in module \fsm.
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$952: { $auto$rtlil.cc:1832:Not$931 $auto$rtlil.cc:1862:And$951 }
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$914: { $auto$rtlil.cc:1832:Not$893 $auto$rtlil.cc:1862:And$913 }
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1112: { $auto$rtlil.cc:1832:Not$1039 $auto$rtlil.cc:1862:And$1111 }
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1100: { \alarm_button $auto$rtlil.cc:1862:And$1099 }
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1082: { \time_button $auto$rtlil.cc:1862:And$1081 }
    New input vector for $reduce_or cell $auto$proc_dlatch.cc:247:make_hold$1021: { \alarm_button $auto$rtlil.cc:1862:And$1020 }
  Optimizing cells in module \fsm.
  Optimizing cells in module \keyreg.
  Optimizing cells in module \lcd_driver.
  Optimizing cells in module \lcd_driver_4.
  Optimizing cells in module \timegen.
Performed a total of 6 changes.

3.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
Finding identical cells in module `\fsm'.
<suppressed ~3 debug messages>
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 1 cells.

3.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..
Removed 0 unused cells and 137 unused wires.
<suppressed ~5 debug messages>

3.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
Optimizing module fsm.
Optimizing module keyreg.
Optimizing module lcd_driver.
Optimizing module lcd_driver_4.
Optimizing module timegen.

3.6.9. Rerunning OPT passes. (Maybe there is more to do..)

3.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alarm_clock_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alarm_reg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keyreg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lcd_driver..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lcd_driver_4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \timegen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~38 debug messages>

3.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alarm_clock_top.
  Optimizing cells in module \alarm_reg.
  Optimizing cells in module \counter.
  Optimizing cells in module \fsm.
  Optimizing cells in module \keyreg.
  Optimizing cells in module \lcd_driver.
  Optimizing cells in module \lcd_driver_4.
  Optimizing cells in module \timegen.
Performed a total of 0 changes.

3.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
Finding identical cells in module `\fsm'.
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 0 cells.

3.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..

3.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
Optimizing module fsm.
Optimizing module keyreg.
Optimizing module lcd_driver.
Optimizing module lcd_driver_4.
Optimizing module timegen.

3.6.16. Finished OPT passes. (There is nothing left to do.)

3.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 4) from port B of cell counter.$eq$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:224$8 ($eq).
Removed top 2 bits (of 4) from port B of cell counter.$eq$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:228$12 ($eq).
Removed top 2 bits (of 4) from port B of cell counter.$eq$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:230$14 ($eq).
Removed top 2 bits (of 3) from port B of cell fsm.$eq$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:398$36 ($eq).
Removed top 1 bits (of 3) from port B of cell fsm.$eq$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:399$37 ($eq).
Removed top 1 bits (of 3) from port B of cell fsm.$eq$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:401$39 ($eq).
Removed top 31 bits (of 32) from mux cell fsm.$ternary$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:417$55 ($mux).
Removed top 31 bits (of 32) from mux cell fsm.$ternary$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:418$56 ($mux).
Removed top 31 bits (of 32) from mux cell fsm.$ternary$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:419$57 ($mux).
Removed top 31 bits (of 32) from mux cell fsm.$ternary$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:420$58 ($mux).
Removed top 31 bits (of 32) from mux cell fsm.$ternary$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:421$59 ($mux).
Removed top 31 bits (of 32) from mux cell fsm.$ternary$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:423$61 ($mux).
Removed top 1 bits (of 3) from mux cell fsm.$procmux$280 ($mux).
Removed top 1 bits (of 3) from mux cell fsm.$procmux$289 ($mux).
Removed top 1 bits (of 3) from mux cell fsm.$procmux$445 ($mux).
Removed top 1 bits (of 3) from wire fsm.$0\_04_[2:0].
Removed top 1 bits (of 3) from wire fsm.$0\_07_[2:0].
Removed top 1 bits (of 3) from wire fsm.$0\_13_[2:0].
Removed top 1 bits (of 4) from port B of cell lcd_driver.$procmux$157_CMP0 ($eq).
Removed top 4 bits (of 8) from mux cell lcd_driver.$procmux$154 ($pmux).
Removed top 1 bits (of 4) from port B of cell lcd_driver.$procmux$158_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell lcd_driver.$procmux$159_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell lcd_driver.$procmux$160_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell lcd_driver.$procmux$161_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell lcd_driver.$procmux$162_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell lcd_driver.$procmux$163_CMP0 ($eq).

3.8. Executing PEEPOPT pass (run peephole optimizers).

3.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

3.10. Executing TECHMAP pass (map to technology primitives).

3.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

3.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~336 debug messages>

3.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module alarm_clock_top:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module alarm_reg:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module counter:
  creating $macc model for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:220$4 ($add).
  creating $macc model for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:221$5 ($add).
  creating $macc model for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:222$6 ($add).
  creating $macc model for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:223$7 ($add).
  creating $alu model for $macc $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:223$7.
  creating $alu model for $macc $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:222$6.
  creating $alu model for $macc $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:221$5.
  creating $alu model for $macc $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:220$4.
  creating $alu cell for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:220$4: $auto$alumacc.cc:474:replace_alu$1156
  creating $alu cell for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:221$5: $auto$alumacc.cc:474:replace_alu$1159
  creating $alu cell for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:222$6: $auto$alumacc.cc:474:replace_alu$1162
  creating $alu cell for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:223$7: $auto$alumacc.cc:474:replace_alu$1165
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module fsm:
  creating $macc model for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:390$28 ($add).
  creating $macc model for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:391$29 ($add).
  creating $alu model for $macc $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:391$29.
  creating $alu model for $macc $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:390$28.
  creating $alu cell for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:390$28: $auto$alumacc.cc:474:replace_alu$1168
  creating $alu cell for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:391$29: $auto$alumacc.cc:474:replace_alu$1171
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module keyreg:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module lcd_driver:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module lcd_driver_4:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module timegen:
  creating $macc model for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:898$85 ($add).
  creating $alu model for $macc $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:898$85.
  creating $alu cell for $add$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:898$85: $auto$alumacc.cc:474:replace_alu$1174
  created 1 $alu and 0 $macc cells.

3.12. Executing SHARE pass (SAT-based resource sharing).

3.13. Executing OPT pass (performing simple optimizations).

3.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
Optimizing module fsm.
<suppressed ~3 debug messages>
Optimizing module keyreg.
Optimizing module lcd_driver.
Optimizing module lcd_driver_4.
Optimizing module timegen.

3.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
Finding identical cells in module `\fsm'.
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 0 cells.

3.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alarm_clock_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alarm_reg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:417$55.
    dead port 2/2 on $mux $ternary$/home/khaja/Desktop/verilog/qflow/dca/dca1/dca/source/alarm_clock_top.v:417$55.
Running muxtree optimizer on module \keyreg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lcd_driver..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lcd_driver_4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \timegen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 2 multiplexer ports.
<suppressed ~37 debug messages>

3.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alarm_clock_top.
  Optimizing cells in module \alarm_reg.
  Optimizing cells in module \counter.
  Optimizing cells in module \fsm.
  Optimizing cells in module \keyreg.
  Optimizing cells in module \lcd_driver.
  Optimizing cells in module \lcd_driver_4.
  Optimizing cells in module \timegen.
Performed a total of 0 changes.

3.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
Finding identical cells in module `\fsm'.
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 0 cells.

3.13.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..
Removed 0 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

3.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
Optimizing module fsm.
Optimizing module keyreg.
Optimizing module lcd_driver.
Optimizing module lcd_driver_4.
Optimizing module timegen.

3.13.9. Rerunning OPT passes. (Maybe there is more to do..)

3.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alarm_clock_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alarm_reg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keyreg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lcd_driver..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lcd_driver_4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \timegen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~37 debug messages>

3.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alarm_clock_top.
  Optimizing cells in module \alarm_reg.
  Optimizing cells in module \counter.
  Optimizing cells in module \fsm.
  Optimizing cells in module \keyreg.
  Optimizing cells in module \lcd_driver.
  Optimizing cells in module \lcd_driver_4.
  Optimizing cells in module \timegen.
Performed a total of 0 changes.

3.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
Finding identical cells in module `\fsm'.
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 0 cells.

3.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..

3.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
Optimizing module fsm.
Optimizing module keyreg.
Optimizing module lcd_driver.
Optimizing module lcd_driver_4.
Optimizing module timegen.

3.13.16. Finished OPT passes. (There is nothing left to do.)

3.14. Executing FSM pass (extract and optimize FSM).

3.14.1. Executing FSM_DETECT pass (finding FSMs in design).

3.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).

3.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).

3.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..

3.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).

3.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

3.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

3.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

3.15. Executing OPT pass (performing simple optimizations).

3.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
Optimizing module fsm.
Optimizing module keyreg.
Optimizing module lcd_driver.
Optimizing module lcd_driver_4.
Optimizing module timegen.

3.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
Finding identical cells in module `\fsm'.
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 0 cells.

3.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..

3.15.5. Finished fast OPT passes.

3.16. Executing MEMORY pass.

3.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

3.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..

3.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

3.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..

3.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

3.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..

3.18. Executing OPT pass (performing simple optimizations).

3.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
Optimizing module fsm.
<suppressed ~5 debug messages>
Optimizing module keyreg.
Optimizing module lcd_driver.
<suppressed ~1 debug messages>
Optimizing module lcd_driver_4.
Optimizing module timegen.
<suppressed ~2 debug messages>

3.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
Finding identical cells in module `\fsm'.
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 0 cells.

3.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.18.5. Finished fast OPT passes.

3.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

3.20. Executing OPT pass (performing simple optimizations).

3.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
Optimizing module fsm.
Optimizing module keyreg.
Optimizing module lcd_driver.
Optimizing module lcd_driver_4.
Optimizing module timegen.

3.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
Finding identical cells in module `\fsm'.
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 0 cells.

3.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alarm_clock_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alarm_reg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keyreg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lcd_driver..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lcd_driver_4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \timegen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

3.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alarm_clock_top.
  Optimizing cells in module \alarm_reg.
  Optimizing cells in module \counter.
  Optimizing cells in module \fsm.
    Consolidated identical input bits for $mux cell $procmux$280:
      Old ports: A=2'00, B=2'11, Y=$0\_04_[2:0]
      New ports: A=1'0, B=1'1, Y=$0\_04_[2:0] [0]
      New connections: $0\_04_[2:0] [1] = $0\_04_[2:0] [0]
    Consolidated identical input bits for $mux cell $procmux$410:
      Old ports: A=3'110, B=3'000, Y=$0\_09_[2:0]
      New ports: A=1'1, B=1'0, Y=$0\_09_[2:0] [1]
      New connections: { $0\_09_[2:0] [2] $0\_09_[2:0] [0] } = { $0\_09_[2:0] [1] 1'0 }
    Consolidated identical input bits for $mux cell $procmux$445:
      Old ports: A=2'00, B=2'10, Y=$0\_07_[2:0]
      New ports: A=1'0, B=1'1, Y=$0\_07_[2:0] [1]
      New connections: $0\_07_[2:0] [0] = 1'0
  Optimizing cells in module \fsm.
  Optimizing cells in module \keyreg.
  Optimizing cells in module \lcd_driver.
  Optimizing cells in module \lcd_driver_4.
  Optimizing cells in module \timegen.
Performed a total of 3 changes.

3.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
Finding identical cells in module `\fsm'.
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 0 cells.

3.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

3.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..

3.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
Optimizing module fsm.
<suppressed ~3 debug messages>
Optimizing module keyreg.
Optimizing module lcd_driver.
Optimizing module lcd_driver_4.
Optimizing module timegen.

3.20.9. Rerunning OPT passes. (Maybe there is more to do..)

3.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alarm_clock_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alarm_reg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \counter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \fsm..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \keyreg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lcd_driver..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \lcd_driver_4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \timegen..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~28 debug messages>

3.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alarm_clock_top.
  Optimizing cells in module \alarm_reg.
  Optimizing cells in module \counter.
  Optimizing cells in module \fsm.
  Optimizing cells in module \keyreg.
  Optimizing cells in module \lcd_driver.
  Optimizing cells in module \lcd_driver_4.
  Optimizing cells in module \timegen.
Performed a total of 0 changes.

3.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
Finding identical cells in module `\fsm'.
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 0 cells.

3.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

3.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

3.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
Optimizing module fsm.
Optimizing module keyreg.
Optimizing module lcd_driver.
Optimizing module lcd_driver_4.
Optimizing module timegen.

3.20.16. Finished OPT passes. (There is nothing left to do.)

3.21. Executing TECHMAP pass (map to technology primitives).

3.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

3.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $not.
Using template $paramod\_90_lcu\WIDTH=4 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $dlatch.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=14\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=14 for cells of type $lcu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=10 for cells of type $pmux.
No more expansions possible.
<suppressed ~678 debug messages>

3.22. Executing OPT pass (performing simple optimizations).

3.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
<suppressed ~99 debug messages>
Optimizing module fsm.
<suppressed ~84 debug messages>
Optimizing module keyreg.
Optimizing module lcd_driver.
<suppressed ~86 debug messages>
Optimizing module lcd_driver_4.
Optimizing module timegen.
<suppressed ~89 debug messages>

3.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
<suppressed ~12 debug messages>
Finding identical cells in module `\fsm'.
<suppressed ~75 debug messages>
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
<suppressed ~87 debug messages>
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
<suppressed ~48 debug messages>
Removed a total of 74 cells.

3.22.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..
Removed 52 unused cells and 380 unused wires.
<suppressed ~56 debug messages>

3.22.5. Finished fast OPT passes.

3.23. Executing ABC pass (technology mapping using ABC).

3.23.1. Extracting gate netlist of module `\alarm_clock_top' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

3.23.2. Extracting gate netlist of module `\alarm_reg' to `<abc-temp-dir>/input.blif'..
Extracted 32 gates and 67 wires to a netlist network with 34 inputs and 16 outputs.

3.23.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.2.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:               MUX cells:       16
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       16
Removing temp directory.

3.23.3. Extracting gate netlist of module `\counter' to `<abc-temp-dir>/input.blif'..
Extracted 155 gates and 192 wires to a netlist network with 35 inputs and 16 outputs.

3.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.3.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       27
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:               MUX cells:       42
ABC RESULTS:              NAND cells:        4
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:       35
ABC RESULTS:                OR cells:       39
ABC RESULTS:             ORNOT cells:       10
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:       11
ABC RESULTS:        internal signals:      141
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       16
Removing temp directory.

3.23.4. Extracting gate netlist of module `\fsm' to `<abc-temp-dir>/input.blif'..
Extracted 164 gates and 208 wires to a netlist network with 42 inputs and 41 outputs.

3.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:       38
ABC RESULTS:              AOI3 cells:        3
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:        6
ABC RESULTS:              NAND cells:        3
ABC RESULTS:               NOT cells:       16
ABC RESULTS:              OAI3 cells:        6
ABC RESULTS:                OR cells:       27
ABC RESULTS:             ORNOT cells:       11
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:      125
ABC RESULTS:           input signals:       42
ABC RESULTS:          output signals:       41
Removing temp directory.

3.23.5. Extracting gate netlist of module `\keyreg' to `<abc-temp-dir>/input.blif'..
Extracted 32 gates and 55 wires to a netlist network with 22 inputs and 16 outputs.

3.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.5.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       16
ABC RESULTS:               MUX cells:       16
ABC RESULTS:        internal signals:       17
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       16
Removing temp directory.

3.23.6. Extracting gate netlist of module `\lcd_driver' to `<abc-temp-dir>/input.blif'..
Extracted 67 gates and 87 wires to a netlist network with 18 inputs and 10 outputs.

3.23.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:       11
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:              AOI4 cells:        3
ABC RESULTS:               MUX cells:        8
ABC RESULTS:              NAND cells:        1
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:              OAI3 cells:        5
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:        3
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        3
ABC RESULTS:        internal signals:       59
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       10
Removing temp directory.

3.23.7. Extracting gate netlist of module `\lcd_driver_4' to `<abc-temp-dir>/input.blif'..
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 1 outputs.

3.23.7.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        1
ABC RESULTS:            ANDNOT cells:        1
ABC RESULTS:              NAND cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        1
Removing temp directory.

3.23.8. Extracting gate netlist of module `\timegen' to `<abc-temp-dir>/input.blif'..
Extracted 107 gates and 128 wires to a netlist network with 19 inputs and 17 outputs.

3.23.8.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

3.23.8.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       17
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        7
ABC RESULTS:               NOR cells:        1
ABC RESULTS:               NOT cells:        1
ABC RESULTS:                OR cells:       35
ABC RESULTS:             ORNOT cells:       10
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:       10
ABC RESULTS:        internal signals:       92
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       17
Removing temp directory.

3.24. Executing OPT pass (performing simple optimizations).

3.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
<suppressed ~16 debug messages>
Optimizing module fsm.
<suppressed ~6 debug messages>
Optimizing module keyreg.
Optimizing module lcd_driver.
Optimizing module lcd_driver_4.
Optimizing module timegen.

3.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
Finding identical cells in module `\fsm'.
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 0 cells.

3.24.3. Executing OPT_RMDFF pass (remove dff with constant values).

3.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..
Removed 2 unused cells and 497 unused wires.
<suppressed ~11 debug messages>

3.24.5. Finished fast OPT passes.

3.25. Executing HIERARCHY pass (managing design hierarchy).

3.25.1. Analyzing design hierarchy..
Top module:  \alarm_clock_top
Used module:     \alarm_reg
Used module:     \counter
Used module:     \fsm
Used module:     \keyreg
Used module:     \lcd_driver_4
Used module:         \lcd_driver
Used module:     \timegen

3.25.2. Analyzing design hierarchy..
Top module:  \alarm_clock_top
Used module:     \alarm_reg
Used module:     \counter
Used module:     \fsm
Used module:     \keyreg
Used module:     \lcd_driver_4
Used module:         \lcd_driver
Used module:     \timegen
Removed 0 unused modules.

3.26. Printing statistics.

=== alarm_clock_top ===

   Number of wires:                 31
   Number of wire bits:             98
   Number of public wires:          31
   Number of public wire bits:      98
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  6
     alarm_reg                       1
     counter                         1
     fsm                             1
     keyreg                          1
     lcd_driver_4                    1
     timegen                         1

=== alarm_reg ===

   Number of wires:                 31
   Number of wire bits:             67
   Number of public wires:          15
   Number of public wire bits:      51
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 64
     $_ANDNOT_                      16
     $_DFF_P_                       32
     $_MUX_                         16

=== counter ===

   Number of wires:                172
   Number of wire bits:            208
   Number of public wires:          16
   Number of public wire bits:      52
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                204
     $_ANDNOT_                      27
     $_AOI3_                         1
     $_DFF_P_                       32
     $_MUX_                         42
     $_NAND_                         4
     $_NOR_                          1
     $_NOT_                         34
     $_ORNOT_                       10
     $_OR_                          39
     $_XNOR_                         3
     $_XOR_                         11

=== fsm ===

   Number of wires:                128
   Number of wire bits:            177
   Number of public wires:          32
   Number of public wire bits:      69
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                170
     $_ANDNOT_                      38
     $_AND_                          6
     $_AOI3_                         3
     $_AOI4_                         2
     $_DFF_P_                       22
     $_DLATCH_P_                    23
     $_MUX_                          6
     $_NAND_                         3
     $_NOT_                         15
     $_OAI3_                         6
     $_ORNOT_                       11
     $_OR_                          27
     $_XNOR_                         2
     $_XOR_                          6

=== keyreg ===

   Number of wires:                 28
   Number of wire bits:             55
   Number of public wires:          12
   Number of public wire bits:      39
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 64
     $_ANDNOT_                      16
     $_DFF_P_                       32
     $_MUX_                         16

=== lcd_driver ===

   Number of wires:                 47
   Number of wire bits:             69
   Number of public wires:           8
   Number of public wire bits:      27
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 51
     $_ANDNOT_                      11
     $_AND_                          2
     $_AOI3_                         1
     $_AOI4_                         3
     $_DLATCH_P_                     4
     $_MUX_                          8
     $_NAND_                         1
     $_NOR_                          1
     $_NOT_                          1
     $_OAI3_                         5
     $_OAI4_                         1
     $_ORNOT_                        6
     $_OR_                           3
     $_XNOR_                         1
     $_XOR_                          3

=== lcd_driver_4 ===

   Number of wires:                 25
   Number of wire bits:             89
   Number of public wires:          23
   Number of public wire bits:      87
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $_ANDNOT_                       1
     $_AND_                          1
     $_NAND_                         1
     lcd_driver                      4

=== timegen ===

   Number of wires:                 79
   Number of wire bits:            105
   Number of public wires:          11
   Number of public wire bits:      37
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                117
     $_ANDNOT_                      17
     $_DFF_P_                       32
     $_MUX_                          1
     $_NAND_                         7
     $_NOR_                          1
     $_NOT_                          1
     $_ORNOT_                       10
     $_OR_                          35
     $_XNOR_                         3
     $_XOR_                         10

=== design hierarchy ===

   alarm_clock_top                   1
     alarm_reg                       1
     counter                         1
     fsm                             1
     keyreg                          1
     lcd_driver_4                    1
       lcd_driver                    4
     timegen                         1

   Number of wires:                682
   Number of wire bits:           1075
   Number of public wires:         172
   Number of public wire bits:     541
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                826
     $_ANDNOT_                     159
     $_AND_                         15
     $_AOI3_                         8
     $_AOI4_                        14
     $_DFF_P_                      150
     $_DLATCH_P_                    39
     $_MUX_                        113
     $_NAND_                        19
     $_NOR_                          6
     $_NOT_                         54
     $_OAI3_                        26
     $_OAI4_                         4
     $_ORNOT_                       55
     $_OR_                         113
     $_XNOR_                        12
     $_XOR_                         39

3.27. Executing CHECK pass (checking for obvious problems).
checking module alarm_clock_top..
checking module alarm_reg..
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_hr [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1268 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1284 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_hr [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1267 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1283 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_hr [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1266 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1282 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_hr [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1265 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1281 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_min [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1264 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1280 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_min [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1263 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1279 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_min [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1262 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1278 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_min [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1261 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1277 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_hr [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1260 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1276 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_hr [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1259 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1275 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_hr [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1258 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1274 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ls_hr [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1257 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1273 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_min [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1256 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1272 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_min [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1255 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1271 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_min [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1254 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1270 ($_DFF_P_)
Warning: multiple conflicting drivers for alarm_reg.\alarm_time_ms_min [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1253 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1269 ($_DFF_P_)
checking module counter..
Warning: multiple conflicting drivers for counter.\current_time_ms_min [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1550 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1566 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ms_min [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1549 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1565 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ms_min [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1548 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1564 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ms_min [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1547 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1563 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ms_hr [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1546 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1562 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ms_hr [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1545 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1561 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ms_hr [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1544 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1560 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ms_hr [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1543 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1559 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ls_min [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1542 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1558 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ls_min [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1541 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1557 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ls_min [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1540 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1556 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ls_min [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1539 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1555 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ls_hr [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1538 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1554 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ls_hr [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1537 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1553 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ls_hr [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1536 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1552 ($_DFF_P_)
Warning: multiple conflicting drivers for counter.\current_time_ls_hr [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1535 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1551 ($_DFF_P_)
checking module fsm..
Warning: multiple conflicting drivers for fsm.\pre_state [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2015 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2018 ($_DFF_P_)
Warning: multiple conflicting drivers for fsm.\pre_state [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2014 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2017 ($_DFF_P_)
Warning: multiple conflicting drivers for fsm.\pre_state [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2013 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2016 ($_DFF_P_)
Warning: multiple conflicting drivers for fsm.\count1 [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2008 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2012 ($_DFF_P_)
Warning: multiple conflicting drivers for fsm.\count1 [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2007 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2011 ($_DFF_P_)
Warning: multiple conflicting drivers for fsm.\count1 [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2006 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2010 ($_DFF_P_)
Warning: multiple conflicting drivers for fsm.\count1 [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2005 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2009 ($_DFF_P_)
Warning: multiple conflicting drivers for fsm.\count2 [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2000 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2004 ($_DFF_P_)
Warning: multiple conflicting drivers for fsm.\count2 [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1999 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2003 ($_DFF_P_)
Warning: multiple conflicting drivers for fsm.\count2 [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1998 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2002 ($_DFF_P_)
Warning: multiple conflicting drivers for fsm.\count2 [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1997 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2001 ($_DFF_P_)
checking module keyreg..
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_min [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1332 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1348 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_min [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1331 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1347 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_min [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1330 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1346 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_min [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1329 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1345 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_hr [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1328 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1344 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_hr [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1327 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1343 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_hr [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1326 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1342 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ms_hr [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1325 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1341 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_min [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1324 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1340 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_min [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1323 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1339 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_min [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1322 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1338 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_min [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1321 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1337 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_hr [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1320 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1336 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_hr [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1319 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1335 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_hr [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1318 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1334 ($_DFF_P_)
Warning: multiple conflicting drivers for keyreg.\key_buffer_ls_hr [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1317 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$1333 ($_DFF_P_)
checking module lcd_driver..
checking module lcd_driver_4..
checking module timegen..
Warning: multiple conflicting drivers for timegen.\one_minute_reg:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2261 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2276 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [13]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2260 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2275 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [12]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2259 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2274 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [11]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2258 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2273 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [10]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2257 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2272 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [9]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2256 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2271 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [8]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2255 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2270 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [7]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2254 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2269 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [6]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2253 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2268 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [5]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2252 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2267 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [4]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2251 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2266 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [3]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2250 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2265 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [2]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2249 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2264 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [1]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2248 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2263 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\count [0]:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2247 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2262 ($_DFF_P_)
Warning: multiple conflicting drivers for timegen.\one_second:
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2245 ($_DFF_P_)
    port Q[0] of cell $auto$simplemap.cc:420:simplemap_dff$2246 ($_DFF_P_)
found and reported 75 problems.

4. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=96.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=96.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=176.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\alarm_clock_top':
Mapping DFF cells in module `\alarm_reg':
  mapped 32 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\counter':
  mapped 32 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\fsm':
  mapped 22 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\keyreg':
  mapped 32 $_DFF_P_ cells to \DFFPOSX1 cells.
Mapping DFF cells in module `\lcd_driver':
Mapping DFF cells in module `\lcd_driver_4':
Mapping DFF cells in module `\timegen':
  mapped 32 $_DFF_P_ cells to \DFFPOSX1 cells.

5. Executing OPT pass (performing simple optimizations).

5.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
Optimizing module fsm.
Optimizing module keyreg.
Optimizing module lcd_driver.
Optimizing module lcd_driver_4.
Optimizing module timegen.

5.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
Finding identical cells in module `\fsm'.
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 0 cells.

5.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alarm_clock_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \alarm_reg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \counter..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \fsm..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \keyreg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lcd_driver..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \lcd_driver_4..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \timegen..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

5.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alarm_clock_top.
  Optimizing cells in module \alarm_reg.
  Optimizing cells in module \counter.
  Optimizing cells in module \fsm.
  Optimizing cells in module \keyreg.
  Optimizing cells in module \lcd_driver.
  Optimizing cells in module \lcd_driver_4.
  Optimizing cells in module \timegen.
Performed a total of 0 changes.

5.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Finding identical cells in module `\alarm_reg'.
Finding identical cells in module `\counter'.
Finding identical cells in module `\fsm'.
Finding identical cells in module `\keyreg'.
Finding identical cells in module `\lcd_driver'.
Finding identical cells in module `\lcd_driver_4'.
Finding identical cells in module `\timegen'.
Removed a total of 0 cells.

5.6. Executing OPT_RMDFF pass (remove dff with constant values).

5.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..
Finding unused cells or wires in module \alarm_reg..
Finding unused cells or wires in module \counter..
Finding unused cells or wires in module \fsm..
Finding unused cells or wires in module \keyreg..
Finding unused cells or wires in module \lcd_driver..
Finding unused cells or wires in module \lcd_driver_4..
Finding unused cells or wires in module \timegen..

5.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.
Optimizing module alarm_reg.
Optimizing module counter.
Optimizing module fsm.
Optimizing module keyreg.
Optimizing module lcd_driver.
Optimizing module lcd_driver_4.
Optimizing module timegen.

5.9. Finished OPT passes. (There is nothing left to do.)

6. Executing ABC pass (technology mapping using ABC).

6.1. Extracting gate netlist of module `\alarm_clock_top' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

6.2. Extracting gate netlist of module `\alarm_reg' to `<abc-temp-dir>/input.blif'..
Extracted 32 gates and 66 wires to a netlist network with 34 inputs and 16 outputs.

6.2.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.01 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.2.2. Re-integrating ABC results.
ABC RESULTS:            MUX2X1 cells:       16
ABC RESULTS:            NOR2X1 cells:       16
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       34
ABC RESULTS:          output signals:       16
Removing temp directory.

6.3. Extracting gate netlist of module `\counter' to `<abc-temp-dir>/input.blif'..
Extracted 172 gates and 207 wires to a netlist network with 35 inputs and 16 outputs.

6.3.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.01 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.3.2. Re-integrating ABC results.
ABC RESULTS:           AOI21X1 cells:       17
ABC RESULTS:             INVX1 cells:       20
ABC RESULTS:           NAND2X1 cells:       17
ABC RESULTS:           NAND3X1 cells:       14
ABC RESULTS:            NOR2X1 cells:       16
ABC RESULTS:            NOR3X1 cells:        2
ABC RESULTS:           OAI21X1 cells:       28
ABC RESULTS:             OR2X2 cells:        2
ABC RESULTS:           XNOR2X1 cells:        5
ABC RESULTS:        internal signals:      156
ABC RESULTS:           input signals:       35
ABC RESULTS:          output signals:       16
Removing temp directory.

6.4. Extracting gate netlist of module `\fsm' to `<abc-temp-dir>/input.blif'..
Extracted 125 gates and 167 wires to a netlist network with 42 inputs and 41 outputs.

6.4.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.01 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.4.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        8
ABC RESULTS:           AOI21X1 cells:        7
ABC RESULTS:           AOI22X1 cells:        4
ABC RESULTS:             INVX1 cells:       24
ABC RESULTS:           NAND2X1 cells:       12
ABC RESULTS:           NAND3X1 cells:        7
ABC RESULTS:            NOR2X1 cells:       25
ABC RESULTS:            NOR3X1 cells:        4
ABC RESULTS:           OAI21X1 cells:        7
ABC RESULTS:             OR2X2 cells:        6
ABC RESULTS:           XNOR2X1 cells:        2
ABC RESULTS:        internal signals:       84
ABC RESULTS:           input signals:       42
ABC RESULTS:          output signals:       41
Removing temp directory.

6.5. Extracting gate netlist of module `\keyreg' to `<abc-temp-dir>/input.blif'..
Extracted 32 gates and 54 wires to a netlist network with 22 inputs and 16 outputs.

6.5.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.5.2. Re-integrating ABC results.
ABC RESULTS:            MUX2X1 cells:       16
ABC RESULTS:            NOR2X1 cells:       16
ABC RESULTS:        internal signals:       16
ABC RESULTS:           input signals:       22
ABC RESULTS:          output signals:       16
Removing temp directory.

6.6. Extracting gate netlist of module `\lcd_driver' to `<abc-temp-dir>/input.blif'..
Extracted 47 gates and 65 wires to a netlist network with 18 inputs and 10 outputs.

6.6.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.6.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        2
ABC RESULTS:           AOI21X1 cells:        1
ABC RESULTS:             INVX1 cells:        6
ABC RESULTS:            MUX2X1 cells:        4
ABC RESULTS:           NAND2X1 cells:        4
ABC RESULTS:            NOR2X1 cells:        4
ABC RESULTS:            NOR3X1 cells:        1
ABC RESULTS:           OAI21X1 cells:        5
ABC RESULTS:           OAI22X1 cells:        1
ABC RESULTS:            XOR2X1 cells:        2
ABC RESULTS:        internal signals:       37
ABC RESULTS:           input signals:       18
ABC RESULTS:          output signals:       10
Removing temp directory.

6.7. Extracting gate netlist of module `\lcd_driver_4' to `<abc-temp-dir>/input.blif'..
Extracted 3 gates and 7 wires to a netlist network with 4 inputs and 1 outputs.

6.7.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.7.2. Re-integrating ABC results.
ABC RESULTS:           NAND2X1 cells:        2
ABC RESULTS:            NOR2X1 cells:        1
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        1
Removing temp directory.

6.8. Extracting gate netlist of module `\timegen' to `<abc-temp-dir>/input.blif'..
Extracted 85 gates and 104 wires to a netlist network with 19 inputs and 17 outputs.

6.8.1. Executing ABC.
Running ABC command: /usr/lib/qflow/bin/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /usr/share/qflow/tech/osu018/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.01 sec
ABC: Memory =    0.36 MB. Time =     0.01 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + ifraig 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + map -M 1 
ABC: + write_blif <abc-temp-dir>/output.blif 

6.8.2. Re-integrating ABC results.
ABC RESULTS:            AND2X2 cells:        4
ABC RESULTS:           AOI21X1 cells:        8
ABC RESULTS:             INVX1 cells:       11
ABC RESULTS:           NAND2X1 cells:       13
ABC RESULTS:           NAND3X1 cells:        1
ABC RESULTS:            NOR2X1 cells:       19
ABC RESULTS:            NOR3X1 cells:        3
ABC RESULTS:           OAI21X1 cells:       13
ABC RESULTS:             OR2X2 cells:        2
ABC RESULTS:        internal signals:       68
ABC RESULTS:           input signals:       19
ABC RESULTS:          output signals:       17
Removing temp directory.

7. Executing FLATTEN pass (flatten design).
Using template timegen for cells of type timegen.
Using template fsm for cells of type fsm.
Using template keyreg for cells of type keyreg.
Using template alarm_reg for cells of type alarm_reg.
Using template counter for cells of type counter.
Using template lcd_driver_4 for cells of type lcd_driver_4.
Using template lcd_driver for cells of type lcd_driver.
<suppressed ~10 debug messages>
No more expansions possible.
Deleting now unused module alarm_reg.
Deleting now unused module counter.
Deleting now unused module fsm.
Deleting now unused module keyreg.
Deleting now unused module lcd_driver.
Deleting now unused module lcd_driver_4.
Deleting now unused module timegen.

8. Executing SETUNDEF pass (replace undef values with defined constants).
Removed 0 unused cells and 963 unused wires.

9. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Don't map input port alarm_clock_top.alarm_button: Missing option -inpad.
Mapping port alarm_clock_top.alarm_sound using BUFX2.
Don't map input port alarm_clock_top.clock: Missing option -inpad.
Don't map input port alarm_clock_top.fastwatch: Missing option -inpad.
Don't map input port alarm_clock_top.key: Missing option -inpad.
Mapping port alarm_clock_top.ls_hour using BUFX2.
Mapping port alarm_clock_top.ls_minute using BUFX2.
Mapping port alarm_clock_top.ms_hour using BUFX2.
Mapping port alarm_clock_top.ms_minute using BUFX2.
Don't map input port alarm_clock_top.reset: Missing option -inpad.
Don't map input port alarm_clock_top.time_button: Missing option -inpad.

10. Executing OPT pass (performing simple optimizations).

10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.

10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Removed a total of 0 cells.

10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \alarm_clock_top..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \alarm_clock_top.
Performed a total of 0 changes.

10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\alarm_clock_top'.
Removed a total of 0 cells.

10.6. Executing OPT_RMDFF pass (remove dff with constant values).

10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \alarm_clock_top..

10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module alarm_clock_top.

10.9. Finished OPT passes. (There is nothing left to do.)

11. Executing BLIF backend.

12. Printing statistics.

=== alarm_clock_top ===

   Number of wires:                440
   Number of wire bits:            667
   Number of public wires:         440
   Number of public wire bits:     667
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                710
     $_DLATCH_P_                    39
     AND2X2                         20
     AOI21X1                        36
     AOI22X1                         4
     BUFX2                          33
     DFFPOSX1                      150
     INVX1                          79
     MUX2X1                         48
     NAND2X1                        60
     NAND3X1                        22
     NOR2X1                        109
     NOR3X1                         13
     OAI21X1                        68
     OAI22X1                         4
     OR2X2                          10
     XNOR2X1                         7
     XOR2X1                          8

Warnings: 150 unique messages, 150 total
End of script. Logfile hash: ae603a24b1
CPU: user 2.87s system 0.15s, MEM: 22.46 MB total, 16.48 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 19% 20x opt_clean (0 sec), 17% 20x opt_expr (0 sec), ...
Running getpowerground to determine power and ground net names.
getpowerground.tcl  /usr/share/qflow/tech/osu018/osu018_stdcells.lef
Cleaning up output syntax
ypostproc.tcl alarm_clock_top_mapped.blif alarm_clock_top /usr/share/qflow/tech/osu018/osu018.sh vdd gnd 
Cleaning up blif file syntax
Running blifFanout (iterative)
Each iteration calls:
blifFanout -l 100 -c 20 -I alarm_clock_top_nofanout -s nullstring -p /usr/share/qflow/tech/osu018/osu018_stdcells.lib -b BUFX2,CLKBUF1 -i A,A -o Y,Y tmp.blif alarm_clock_top.blif

blifFanout for qflow 1.3.17
Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Top internal fanout is 33 (load 563.456) from node fsm1._25_,
driven by NOR2X1 with strength 58.1923 (fF driven at latency 100)
Top fanout load-to-strength ratio is 9.61283 (latency = 961.283 ps)
Top input node fanout is 113 (load 2633.99) from node reset.
Warning 1: load of 142.394 is 1.28107 times greater than strongest gate OR2X2
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 2: load of 88.7486 is 1.54028 times greater than strongest gate NAND3X1
Warning 4: load of 318.899 is 2.52251 times greater than strongest gate DFFPOSX1
Warning 86: load of 161.118 is 2.75891 times greater than strongest gate NAND2X1
Warning 134: load of 545.723 is 9.37793 times greater than strongest gate NOR2X1
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
256 gates exceed specified minimum load.
32 buffers were added.
20 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 608    	Out: 588    	-20
	"2" gates	In: 86    	Out: 104    	+18

Number of gates changed: 52
gates resized: 52
blifFanout for qflow 1.3.17
Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Top internal fanout is 16 (load 589.951) from node alreg1.load_new_alarm,
driven by NOR2X1 with strength 58.1923 (fF driven at latency 100)
Top fanout load-to-strength ratio is 5.96721 (latency = 596.721 ps)
Top input node fanout is 10 (load 373.913) from node reset.
Warning 1: load of 578.68 is 2.49845 times greater than strongest gate CLKBUF1
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 9: load of 580.51 is 2.50635 times greater than strongest gate CLKBUF1
Warning 17: load of 599.951 is 2.59029 times greater than strongest gate CLKBUF1
Warning 22: load of 328.231 is 2.59633 times greater than strongest gate DFFPOSX1
Warning 103: load of 161.118 is 2.75891 times greater than strongest gate NAND2X1
Warning 155: load of 418.707 is 3.70801 times greater than strongest gate AND2X2
Warning 157: load of 357.245 is 6.13905 times greater than strongest gate NOR2X1
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
274 gates exceed specified minimum load.
0 buffers were added.
15 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 606    	Out: 606    	+0
	"2" gates	In: 118    	Out: 103    	-15
	"8" gates	In: 2    	Out: 2    	+0

Number of gates changed: 15
gates resized: 15
blifFanout for qflow 1.3.17
Parsing library "osu018_stdcells"
End of library at line 6141
Lib Read:  Processed 6142 lines.
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Top internal fanout is 16 (load 589.951) from node alreg1.load_new_alarm,
driven by NOR2X1 with strength 58.1923 (fF driven at latency 100)
Top fanout load-to-strength ratio is 5.96721 (latency = 596.721 ps)
Top input node fanout is 10 (load 373.913) from node reset.
Warning 1: load of 293.54 is 1.30469 times greater than strongest gate BUFX4
This warning will only be repeated for larger overload ratios.  Warning count reflects
the total number of overloaded nets.
Warning 5: load of 578.68 is 2.49845 times greater than strongest gate CLKBUF1
Warning 23: load of 580.51 is 2.50635 times greater than strongest gate CLKBUF1
Warning 31: load of 599.951 is 2.59029 times greater than strongest gate CLKBUF1
Warning 36: load of 328.231 is 2.59633 times greater than strongest gate DFFPOSX1
Warning 117: load of 161.118 is 2.75891 times greater than strongest gate NAND2X1
Warning 169: load of 418.707 is 3.70801 times greater than strongest gate AND2X2
Warning 171: load of 357.245 is 6.13905 times greater than strongest gate NOR2X1
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
Error: did not find pin .latch
288 gates exceed specified minimum load.
0 buffers were added.
0 gates were changed.

Gate counts by drive strength:

	"1" gates	In: 606    	Out: 606    	+0
	"2" gates	In: 103    	Out: 103    	+0
	"4" gates	In: 15    	Out: 15    	+0
	"8" gates	In: 2    	Out: 2    	+0

Number of gates changed: 0
gates resized: 0

Generating RTL verilog and SPICE netlist file in directory
	 /home/khaja/Desktop/verilog/qflow/dca/dca1/dca/synthesis
Files:
   Verilog: /home/khaja/Desktop/verilog/qflow/dca/dca1/dca/synthesis/alarm_clock_top.rtl.v
   Verilog: /home/khaja/Desktop/verilog/qflow/dca/dca1/dca/synthesis/alarm_clock_top.rtlnopwr.v
   Verilog: /home/khaja/Desktop/verilog/qflow/dca/dca1/dca/synthesis/alarm_clock_top.rtlbb.v
   Spice:   /home/khaja/Desktop/verilog/qflow/dca/dca1/dca/synthesis/alarm_clock_top.spc

Running blif2Verilog.
Running blif2BSpice.
Running spi2xspice.py
spi2xspice.py "/usr/share/qflow/tech/osu018/osu018_stdcells.lib" -io_time=1n -time=100p -idelay=10p -odelay=100p -cload=500f alarm_clock_top.spc alarm_clock_top.xspice

Synthesis script ended on Saturday 07 October 2023 04:19:40 PM IST
